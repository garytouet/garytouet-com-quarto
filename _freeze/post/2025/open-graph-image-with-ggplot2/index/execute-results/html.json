{
  "hash": "1060b7e72f75557ecff5722e9148163a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Working title: Create an open graph image with ggplot2\"\ndraft: true\ndate: 2025.10.07\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(grid)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(\n    fig.width = 8,\n    fig.height = 5\n)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Method 1: Simple Linear Gradient Background\ncreate_linear_gradient <- function(colors, title, subtitle = \"\") {\n    ggplot() +\n        annotate(\"rect\",\n            xmin = 0, xmax = 1, ymin = 0, ymax = 1,\n            fill = colors[1]\n        ) +\n        geom_rect(aes(xmin = 0, xmax = 1, ymin = 0, ymax = 1),\n            fill = scales::alpha(colors[2], 0.5)\n        ) +\n        annotate(\"text\",\n            x = 0.1, y = 0.75, label = title,\n            hjust = 0, vjust = 0, size = 16, color = \"white\",\n            fontface = \"bold\", family = \"sans\"\n        ) +\n        annotate(\"text\",\n            x = 0.1, y = 0.65, label = subtitle,\n            hjust = 0, vjust = 0, size = 6, color = \"white\",\n            family = \"sans\"\n        ) +\n        coord_fixed(ratio = 1, xlim = c(0, 1), ylim = c(0, 1)) +\n        theme_void() +\n        theme(plot.background = element_rect(fill = colors[1], color = NA))\n}\n\n# Method 2: Multi-Point Gradient using geom_raster\ncreate_smooth_gradient <- function(colors, title, subtitle = \"\", n = 100) {\n    # Create a grid of points\n    df <- expand.grid(\n        x = seq(0, 1, length.out = n),\n        y = seq(0, 1, length.out = n)\n    )\n\n    # Create gradient effect using distance-based color mixing\n    df$dist1 <- sqrt((df$x - 0)^2 + (df$y - 1)^2)\n    df$dist2 <- sqrt((df$x - 1)^2 + (df$y - 0)^2)\n\n    # Normalize distances\n    df$color_mix <- df$dist1 / (df$dist1 + df$dist2)\n\n    ggplot(df, aes(x, y, fill = color_mix)) +\n        geom_raster(interpolate = TRUE) +\n        scale_fill_gradientn(colors = colors) +\n        annotate(\"text\",\n            x = 0.1, y = 0.75, label = title,\n            hjust = 0, vjust = 0, size = 16, color = \"white\",\n            fontface = \"bold\"\n        ) +\n        annotate(\"text\",\n            x = 0.1, y = 0.65, label = subtitle,\n            hjust = 0, vjust = 0, size = 6, color = \"white\"\n        ) +\n        coord_fixed(ratio = 1) +\n        theme_void() +\n        theme(legend.position = \"none\")\n}\n\n# Method 3: Radial Gradient Effect\ncreate_radial_gradient <- function(colors, title, subtitle = \"\",\n                                   center_x = 0.7, center_y = 0.5) {\n    df <- expand.grid(\n        x = seq(0, 1, length.out = 100),\n        y = seq(0, 1, length.out = 100)\n    )\n\n    # Calculate distance from center point\n    df$dist <- sqrt((df$x - center_x)^2 + (df$y - center_y)^2)\n\n    ggplot(df, aes(x, y, fill = dist)) +\n        geom_raster(interpolate = TRUE) +\n        scale_fill_gradientn(colors = colors) +\n        annotate(\"text\",\n            x = 0.1, y = 0.75, label = title,\n            hjust = 0, vjust = 0, size = 16, color = \"white\",\n            fontface = \"bold\"\n        ) +\n        annotate(\"text\",\n            x = 0.1, y = 0.65, label = subtitle,\n            hjust = 0, vjust = 0, size = 6, color = \"white\"\n        ) +\n        coord_fixed(ratio = 1) +\n        theme_void() +\n        theme(legend.position = \"none\")\n}\n\n# Example 1: Orange to Pink (like Image 1)\np1 <- create_smooth_gradient(\n    colors = c(\"#FF8C69\", \"#FF6B9D\", \"#C77DFF\"),\n    title = \"ChatGPT for marketing\",\n    subtitle = \"Learn ChatGPT use cases and prompts for marketing teams\"\n)\n\n# Example 2: Yellow to Teal (like Image 2)\np2 <- create_radial_gradient(\n    colors = c(\"#FFE17B\", \"#B8E6DC\", \"#87CEEB\"),\n    title = \"GPT-5\\nfor Builders\",\n    subtitle = \"Faster coding, flexible tooling,\\nbetter reasoning\",\n    center_x = 0.8, center_y = 0.3\n)\n\n# Example 3: Purple to Pink (like Image 3)\np3 <- create_smooth_gradient(\n    colors = c(\"#9B7EBD\", \"#D4A5D4\", \"#FFB5C5\"),\n    title = \"Empower and\\nsupport your team\",\n    subtitle = \"Learn how Admins drive adoption\\nand value with ChatGPT\"\n)\n\n# Example 4: Multi-color gradient (like Image 4)\np4 <- create_radial_gradient(\n    colors = c(\"#A8D8EA\", \"#FFB88C\", \"#FFA07A\"),\n    title = \"The AI\\nChampion Role\",\n    subtitle = \"Learn how to drive adoption,\\nshape change and make AI stick\",\n    center_x = 0.75, center_y = 0.6\n)\n\n# Display one of the plots\nprint(p1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=768}\n:::\n\n```{.r .cell-code}\n# To save:\n# ggsave(\"gradient_bg.png\", p1, width = 8, height = 6, dpi = 300)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(p2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=768}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(p3)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(p4)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=768}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}